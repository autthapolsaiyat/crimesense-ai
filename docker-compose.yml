version: "3.9"

networks:
  crime_ai_net:
    driver: bridge

volumes:
  crime_ai_pgdata:
  crime_ai_letsencrypt:
  crime_ai_mssql:   # โวลุ่มเก็บข้อมูล MSSQL

services:
  reverse_proxy:
    image: traefik:v3.0
    container_name: crime_ai_traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8088:8080"     # Traefik dashboard (อย่าเปิดสาธารณะถ้าไม่จำเป็น)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - crime_ai_letsencrypt:/letsencrypt
    restart: unless-stopped
    networks: [crime_ai_net]

  db:
    image: postgres:16-alpine
    container_name: crime_ai_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-crimeai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-crimeai}
      POSTGRES_DB: ${POSTGRES_DB:-crime_ai}
      TZ: ${TZ:-Asia/Bangkok}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - crime_ai_pgdata:/var/lib/postgresql/data
      - ./sql:/sql:ro   # ใช้รัน indexes.sql / fts_thai.sql ภายในคอนเทนเนอร์
    restart: unless-stopped
    networks: [crime_ai_net]

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver_express
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SQLSERVER_PASS}
      MSSQL_PID: "Express"
      TZ: ${TZ:-Asia/Bangkok}
    ports:
      - "1433:1433"   # เปิดไว้เผื่อตรวจจาก host
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P $$SA_PASSWORD -Q 'SELECT 1' -C"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s
    volumes:
      - crime_ai_mssql:/var/opt/mssql
    restart: unless-stopped
    networks: [crime_ai_net]

  api:
    build: ./api
    container_name: crime_ai_api
    depends_on:
      db:
        condition: service_healthy
      mssql:
        condition: service_healthy
    env_file: .env
    environment:
      TZ: ${TZ:-Asia/Bangkok}
      # ให้ใช้โฮสต์ฐานข้อมูลเป็น 'db' (ชื่อ service)
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://crimeai:crimeai@db:5432/crime_ai}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_HOST}`)"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
    # ใช้ array เพื่อกัน YAML พังจาก 'app:app'
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8080"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health || wget -qO- http://localhost:8080/health >/dev/null 2>&1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 15s
    restart: unless-stopped
    networks: [crime_ai_net]

  frontend:
    build: ./frontend
    container_name: crime_ai_frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fe.rule=Host(`${FE_HOST}`)"
      - "traefik.http.services.fe.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ >/dev/null 2>&1 || curl -fsS http://localhost/ >/dev/null"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped
    networks: [crime_ai_net]

